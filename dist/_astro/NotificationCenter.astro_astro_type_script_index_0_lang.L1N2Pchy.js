import{d as s}from"./dashboardData.BFIWEmhj.js";class o{constructor(){this.notifications=[],this.isOpen=!1,this.init(),this.loadNotifications(),this.setupRealTimeUpdates()}init(){const t=document.getElementById("notification-bell"),e=document.getElementById("notification-panel"),i=document.getElementById("mark-all-read"),n=document.getElementById("clear-all");t?.addEventListener("click",()=>this.togglePanel()),i?.addEventListener("click",()=>this.markAllAsRead()),n?.addEventListener("click",()=>this.clearAll()),document.addEventListener("click",a=>{!t?.contains(a.target)&&!e?.contains(a.target)&&this.closePanel()})}loadNotifications(){this.notifications=s.generateNotifications(),this.renderNotifications(),this.updateBadge()}setupRealTimeUpdates(){setInterval(()=>{Math.random()>.8&&this.addNotification(this.generateRandomNotification())},3e4)}generateRandomNotification(){const t=["deployment","alert","system","security"],e=["New deployment completed successfully","System maintenance scheduled","Security scan finished","High CPU usage detected"];return{id:`notif-${Date.now()}`,title:"System Alert",message:e[Math.floor(Math.random()*e.length)],type:t[Math.floor(Math.random()*t.length)],read:!1,timestamp:new Date().toISOString()}}addNotification(t){this.notifications.unshift(t),this.renderNotifications(),this.updateBadge(),this.showNewNotificationAnimation()}showNewNotificationAnimation(){const t=document.getElementById("notification-badge");t?.classList.add("animate-bounce"),setTimeout(()=>{t?.classList.remove("animate-bounce")},1e3)}togglePanel(){this.isOpen?this.closePanel():this.openPanel()}openPanel(){const t=document.getElementById("notification-panel");t?.classList.remove("scale-95","opacity-0","pointer-events-none"),t?.classList.add("scale-100","opacity-100"),this.isOpen=!0}closePanel(){const t=document.getElementById("notification-panel");t?.classList.add("scale-95","opacity-0","pointer-events-none"),t?.classList.remove("scale-100","opacity-100"),this.isOpen=!1}markAllAsRead(){this.notifications.forEach(t=>t.read=!0),this.renderNotifications(),this.updateBadge()}clearAll(){this.notifications=[],this.renderNotifications(),this.updateBadge()}updateBadge(){const t=document.getElementById("notification-badge"),e=this.notifications.filter(i=>!i.read).length;t&&(t.textContent=e.toString(),e>0?(t.classList.remove("opacity-0","scale-0"),t.classList.add("opacity-100","scale-100")):(t.classList.add("opacity-0","scale-0"),t.classList.remove("opacity-100","scale-100")))}renderNotifications(){const t=document.getElementById("notifications-container"),e=document.getElementById("empty-notifications");if(!(!t||!e)){if(this.notifications.length===0){t.innerHTML="",e.classList.remove("hidden");return}e.classList.add("hidden"),t.innerHTML=this.notifications.map(i=>this.renderNotification(i)).join(""),t.querySelectorAll(".notification-item").forEach((i,n)=>{i.addEventListener("click",()=>this.markAsRead(n))})}}renderNotification(t){const e={deployment:'<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 16a4 4 0 01-.88-7.903A5 5 0 1115.9 6L16 6a5 5 0 011 9.9M9 19l3 3m0 0l3-3m-3 3V10"></path>',alert:'<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L4.082 16.5c-.77.833.192 2.5 1.732 2.5z"></path>',system:'<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 002.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 001.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 00-1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 00-2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 00-2.573-1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 00-1.065-2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 001.066-2.573c-.94-1.543.826-3.31 2.37-2.37.996.608 2.296.07 2.572-1.065z"></path><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"></path>',security:'<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m5.618-4.016A11.955 11.955 0 0112 2.944a11.955 11.955 0 01-8.618 3.04A12.02 12.02 0 003 9c0 5.591 3.824 10.29 9 11.622 5.176-1.332 9-6.03 9-11.622 0-1.042-.133-2.052-.382-3.016z"></path>'},i={deployment:"text-blue-500",alert:"text-yellow-500",system:"text-gray-500",security:"text-green-500"},n=this.getTimeAgo(t.timestamp);return`
        <div class="notification-item p-3 hover:bg-gray-50 dark:hover:bg-gray-700 cursor-pointer transition-colors duration-200 ${t.read?"opacity-60":""}">
          <div class="flex items-start space-x-3">
            <div class="flex-shrink-0">
              <svg class="w-5 h-5 ${i[t.type]}" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                ${e[t.type]}
              </svg>
            </div>
            <div class="flex-1 min-w-0">
              <p class="text-sm font-medium text-gray-900 dark:text-gray-100 ${t.read?"":"font-semibold"}">
                ${t.title}
              </p>
              <p class="text-sm text-gray-500 dark:text-gray-400 truncate">
                ${t.message}
              </p>
              <p class="text-xs text-gray-400 dark:text-gray-500 mt-1">
                ${n}
              </p>
            </div>
            ${t.read?"":'<div class="w-2 h-2 bg-blue-500 rounded-full flex-shrink-0"></div>'}
          </div>
        </div>
      `}markAsRead(t){this.notifications[t].read=!0,this.renderNotifications(),this.updateBadge()}getTimeAgo(t){const e=new Date,i=new Date(t),n=Math.floor((e.getTime()-i.getTime())/(1e3*60));if(n<1)return"Just now";if(n<60)return`${n}m ago`;const a=Math.floor(n/60);return a<24?`${a}h ago`:`${Math.floor(a/24)}d ago`}}document.addEventListener("DOMContentLoaded",()=>{new o});
