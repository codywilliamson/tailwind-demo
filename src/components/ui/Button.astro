---
export interface Props {
  variant?: 'primary' | 'secondary' | 'danger' | 'ghost' | 'link';
  size?: 'sm' | 'md' | 'lg' | 'xl';
  disabled?: boolean;
  loading?: boolean;
  type?: 'button' | 'submit' | 'reset';
  href?: string;
  target?: string;
  icon?: string;
  iconPosition?: 'left' | 'right';
  fullWidth?: boolean;
  class?: string;
  id?: string;
}

const { 
  variant = 'primary',
  size = 'md',
  disabled = false,
  loading = false,
  type = 'button',
  href,
  target,
  icon,
  iconPosition = 'left',
  fullWidth = false,
  class: className = '',
  ...rest
} = Astro.props;

const sizeClasses = {
  sm: 'px-3 py-1.5 text-sm',
  md: 'px-4 py-2 text-sm',
  lg: 'px-6 py-3 text-base',
  xl: 'px-8 py-4 text-lg'
};

const variantClasses = {
  primary: 'btn-primary',
  secondary: 'btn-secondary',
  danger: 'btn-danger',
  ghost: 'btn-ghost',
  link: 'text-emerald-600 dark:text-emerald-400 hover:text-emerald-700 dark:hover:text-emerald-300 hover:underline font-medium'
};

const baseClasses = variant === 'link' 
  ? 'inline-flex items-center transition-colors duration-200 focus:outline-none focus:ring-2 focus:ring-emerald-500 focus:ring-offset-2 disabled:opacity-50 disabled:cursor-not-allowed'
  : `btn ${variantClasses[variant as keyof typeof variantClasses]} ${sizeClasses[size as keyof typeof sizeClasses]}`;

const classes = [
  baseClasses,
  fullWidth ? 'w-full justify-center' : 'inline-flex items-center',
  className
].filter(Boolean).join(' ');

const Tag = href ? 'a' : 'button';
const attributes = href ? { href, target } : { type, disabled: disabled || loading };
---

<Tag 
  class={classes}
  {...attributes}
  {...rest}
>
  {loading && (
    <svg class="animate-spin -ml-1 mr-2 h-4 w-4" fill="none" viewBox="0 0 24 24">
      <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
      <path class="opacity-75" fill="currentColor" d="m4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
    </svg>
  )}
  
  {icon && iconPosition === 'left' && !loading && (
    <span class="mr-2" set:html={icon} />
  )}
  
  <slot />
  
  {icon && iconPosition === 'right' && !loading && (
    <span class="ml-2" set:html={icon} />
  )}
</Tag>