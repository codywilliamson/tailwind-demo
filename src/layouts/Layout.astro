---
import '../styles/globals.css';
---

<!doctype html>
<html lang="en" class="scroll-smooth">
	<head>
		<meta charset="UTF-8" />
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="generator" content={Astro.generator} />
		<title>Astro Basics</title>
		
		<!-- Dark Mode Initialization - Must be in head to prevent flash -->
		<script is:inline>
			// Dark mode initialization
			(function() {
				function getThemePreference() {
					if (typeof localStorage !== 'undefined' && localStorage.getItem('theme')) {
						return localStorage.getItem('theme');
					}
					return window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light';
				}

				const isDark = getThemePreference() === 'dark';
				document.documentElement.classList[isDark ? 'add' : 'remove']('dark');
				
				// Save the preference
				if (typeof localStorage !== 'undefined') {
					localStorage.setItem('theme', isDark ? 'dark' : 'light');
				}
			})();
		</script>
	</head>
	<body>
		<slot />
	</body>
</html>

<style>
	html,
	body {
		margin: 0;
		width: 100%;
		height: 100%;
	}
</style>

<script>
	// Dark mode toggle functionality
	function initializeDarkMode() {
		const toggleButton = document.querySelector('[data-theme-toggle]');
		const themeInputs = document.querySelectorAll('#dark-mode-input, [data-theme-input]');
		
		// Set initial state of toggle buttons
		const currentTheme = localStorage.getItem('theme') || 'light';
		const isDark = currentTheme === 'dark';
		
		themeInputs.forEach(input => {
			if (input && input instanceof HTMLInputElement) {
				input.checked = isDark;
			}
		});

		// Function to toggle theme
		function toggleTheme() {
			const html = document.documentElement;
			const currentTheme = localStorage.getItem('theme') || 'light';
			const newTheme = currentTheme === 'dark' ? 'light' : 'dark';
			
			html.classList.toggle('dark', newTheme === 'dark');
			localStorage.setItem('theme', newTheme);
			
			// Update all toggle inputs
			themeInputs.forEach(input => {
				if (input && input instanceof HTMLInputElement) {
					input.checked = newTheme === 'dark';
				}
			});
		}

		// Add event listeners to all theme toggle inputs
		themeInputs.forEach(input => {
			if (input) {
				input.addEventListener('change', toggleTheme);
			}
		});

		// Add event listener to toggle button if it exists
		if (toggleButton) {
			toggleButton.addEventListener('click', toggleTheme);
		}
	}

	// Initialize on page load
	document.addEventListener('DOMContentLoaded', initializeDarkMode);
	
	// Re-initialize on Astro page transitions
	document.addEventListener('astro:page-load', initializeDarkMode);
</script>
